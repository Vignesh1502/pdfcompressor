{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\securra\\\\learnz-app\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUploadForm = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'application/pdf') {\n      alert('Please upload a PDF file.');\n      setSelectedFile(null);\n      e.target.value = null;\n    } else {\n      setSelectedFile(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      alert('Please select a PDF file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(`File uploaded successfully: ${data.filename}`);\n      } else {\n        alert('File upload failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload PDF File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"Choose a PDF file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          name: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"upload-btn\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfUploadForm, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = PdfUploadForm;\nexport default PdfUploadForm;\nvar _c;\n$RefreshReg$(_c, \"PdfUploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfUploadForm","_s","selectedFile","setSelectedFile","handleFileChange","e","file","target","files","type","alert","value","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","data","json","filename","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/securra/learnz-app/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PdfUploadForm = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type !== 'application/pdf') {\r\n      alert('Please upload a PDF file.');\r\n      setSelectedFile(null);\r\n      e.target.value = null;\r\n    } else {\r\n      setSelectedFile(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!selectedFile) {\r\n      alert('Please select a PDF file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(`File uploaded successfully: ${data.filename}`);\r\n      } else {\r\n        alert('File upload failed.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-upload-form\">\r\n      <h2>Upload PDF File</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"file\">Choose a PDF file:</label>\r\n          <input type=\"file\" id=\"file\" name=\"file\" accept=\"application/pdf\" onChange={handleFileChange}/>\r\n        </div>\r\n        <button type=\"submit\" id=\"upload-btn\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfUploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAE;MAC3CC,KAAK,CAAC,2BAA2B,CAAC;MAClCP,eAAe,CAAC,IAAI,CAAC;MACrBE,CAAC,CAACE,MAAM,CAACI,KAAK,GAAG,IAAI;IACvB,CAAC,MAAM;MACLR,eAAe,CAACG,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOP,CAAC,IAAK;IAChCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAElB,IAAI,CAACX,YAAY,EAAE;MACjBQ,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;IAEA,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,YAAY,CAAC;IAErC,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCb,KAAK,CAAC,+BAA+BY,IAAI,CAACE,QAAQ,EAAE,CAAC;MACvD,CAAC,MAAM;QACLd,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9Bf,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEX,OAAA;IAAK4B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MAAMkC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3B7B,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOmC,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDjC,OAAA;UAAOU,IAAI,EAAC,MAAM;UAAC0B,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,iBAAiB;UAACC,QAAQ,EAAElC;QAAiB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC,eACNjC,OAAA;QAAQU,IAAI,EAAC,QAAQ;QAAC0B,EAAE,EAAC,YAAY;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvDID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}